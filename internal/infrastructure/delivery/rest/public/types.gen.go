// Package public provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package public

import (
	"time"
)

// CheckEventSeatsRequest defines model for CheckEventSeatsRequest.
type CheckEventSeatsRequest struct {
	Count    int  `json:"count"`
	Features *int `json:"features,omitempty"`
	Rank     *int `json:"rank,omitempty"`
}

// CheckEventSeatsResponse defines model for CheckEventSeatsResponse.
type CheckEventSeatsResponse struct {
	Remaining int `json:"remaining"`
}

// CheckoutRequest defines model for CheckoutRequest.
type CheckoutRequest struct {
	Count       int    `json:"count"`
	EventID     string `json:"eventID"`
	Preferences *struct {
		Features *int `json:"features,omitempty"`
		Rank     *int `json:"rank,omitempty"`
	} `json:"preferences,omitempty"`
	UserID string `json:"userID"`
}

// CheckoutResponse defines model for CheckoutResponse.
type CheckoutResponse struct {
	Count       int    `json:"count"`
	EventID     string `json:"eventID"`
	Id          string `json:"id"`
	Preferences *struct {
		Features *int `json:"features,omitempty"`
		Rank     *int `json:"rank,omitempty"`
	} `json:"preferences,omitempty"`
	UserID string `json:"userID"`
}

// ErrorResponse defines model for ErrorResponse.
type ErrorResponse struct {
	Error   string `json:"error"`
	Message string `json:"message"`
}

// Event defines model for Event.
type Event struct {
	Description string     `json:"description"`
	EndDate     *time.Time `json:"endDate,omitempty"`
	Id          string     `json:"id"`
	Name        string     `json:"name"`
	StartDate   *time.Time `json:"startDate,omitempty"`
}

// EventResponse defines model for EventResponse.
type EventResponse struct {
	// Embedded struct due to allOf(#/components/schemas/Event)
	Event `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Location Hall `json:"location"`
}

// EventsResponse defines model for EventsResponse.
type EventsResponse []struct {
	// Embedded struct due to allOf(#/components/schemas/Event)
	Event `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	LocationID string `json:"locationID"`
}

// Hall defines model for Hall.
type Hall struct {
	Name     string    `json:"name"`
	Sections []Section `json:"sections"`
}

// Row defines model for Row.
type Row struct {
	Name  string `json:"name"`
	Order int    `json:"order"`
	Seats []Seat `json:"seats"`
}

// Seat defines model for Seat.
type Seat struct {
	Available bool `json:"available"`
	Features  *int `json:"features,omitempty"`
	Number    int  `json:"number"`
	Position  struct {
		Col int `json:"col"`
		Row int `json:"row"`
	} `json:"position"`
	Rank int `json:"rank"`
}

// Section defines model for Section.
type Section struct {
	Name string `json:"name"`
	Rows []Row  `json:"rows"`
}

// Ticket defines model for Ticket.
type Ticket struct {
	Event struct {
		// Embedded struct due to allOf(#/components/schemas/Event)
		Event `yaml:",inline"`
		// Embedded fields due to inline allOf schema
		Location struct {
			Id   string `json:"id"`
			Name string `json:"name"`
		} `json:"location"`
	} `json:"event"`
	Id   string `json:"id"`
	Seat *Seat  `json:"seat,omitempty"`
	User User   `json:"user"`
}

// User defines model for User.
type User struct {
	Id   string  `json:"id"`
	Name *string `json:"name,omitempty"`
}

// UserResponse defines model for UserResponse.
type UserResponse struct {
	User User `json:"user"`
}

// UserTicketsResponse defines model for UserTicketsResponse.
type UserTicketsResponse []Ticket

// UsersResponse defines model for UsersResponse.
type UsersResponse []User

// CheckoutJSONBody defines parameters for Checkout.
type CheckoutJSONBody CheckoutRequest

// CheckEventSeatsJSONBody defines parameters for CheckEventSeats.
type CheckEventSeatsJSONBody CheckEventSeatsRequest

// CheckoutJSONRequestBody defines body for Checkout for application/json ContentType.
type CheckoutJSONRequestBody CheckoutJSONBody

// CheckEventSeatsJSONRequestBody defines body for CheckEventSeats for application/json ContentType.
type CheckEventSeatsJSONRequestBody CheckEventSeatsJSONBody
