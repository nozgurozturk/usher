// Code generated by entc, DO NOT EDIT.

package row

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the row type in the database.
	Label = "row"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldOrder holds the string denoting the order field in the database.
	FieldOrder = "order"
	// EdgeSection holds the string denoting the section edge name in mutations.
	EdgeSection = "section"
	// EdgeSeats holds the string denoting the seats edge name in mutations.
	EdgeSeats = "seats"
	// Table holds the table name of the row in the database.
	Table = "rows"
	// SectionTable is the table that holds the section relation/edge.
	SectionTable = "rows"
	// SectionInverseTable is the table name for the Section entity.
	// It exists in this package in order to avoid circular dependency with the "section" package.
	SectionInverseTable = "sections"
	// SectionColumn is the table column denoting the section relation/edge.
	SectionColumn = "section_rows"
	// SeatsTable is the table that holds the seats relation/edge.
	SeatsTable = "seats"
	// SeatsInverseTable is the table name for the Seat entity.
	// It exists in this package in order to avoid circular dependency with the "seat" package.
	SeatsInverseTable = "seats"
	// SeatsColumn is the table column denoting the seats relation/edge.
	SeatsColumn = "row_seats"
)

// Columns holds all SQL columns for row fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldOrder,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "rows"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"section_rows",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultOrder holds the default value on creation for the "order" field.
	DefaultOrder int
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
